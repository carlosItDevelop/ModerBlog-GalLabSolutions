
@model ModernBlog.Models.Post
@{
    ViewData["Title"] = Model.Title;
    var relatedPosts = ViewBag.RelatedPosts as IEnumerable<ModernBlog.Models.Post>;
    var recentPosts = ViewBag.RecentPosts as IEnumerable<ModernBlog.Models.Post>;
    var categories = ViewBag.Categories as IEnumerable<ModernBlog.Models.Category>;
}

<div class="container mt-4">
    <div class="row">
        <!-- Main Content -->
        <div class="col-lg-8">
            <article class="mb-5">
                <!-- Featured Image -->
                @if (!string.IsNullOrEmpty(Model.FeaturedImageUrl))
                {
                    <img src="/@Model.FeaturedImageUrl" class="img-fluid w-100 mb-4" 
                         style="height: 400px; object-fit: cover;" alt="@Model.Title">
                }

                <!-- Post Header -->
                <header class="mb-4">
                    <h1 class="display-5 fw-bold mb-3">@Model.Title</h1>
                    
                    <div class="d-flex flex-wrap align-items-center text-muted mb-3">
                        <span class="me-4">
                            <i class="bi bi-person me-1"></i>@Model.Author.FullName
                        </span>
                        <span class="me-4">
                            <i class="bi bi-calendar me-1"></i>@Model.PublishedAt?.ToString("dd 'de' MMMM 'de' yyyy", new System.Globalization.CultureInfo("pt-BR"))
                        </span>
                        <span class="me-4">
                            <i class="bi bi-eye me-1"></i>@Model.ViewCount visualizações
                        </span>
                        <span>
                            <i class="bi bi-heart me-1"></i>@Model.LikeCount curtidas
                        </span>
                    </div>

                    <div class="d-flex flex-wrap align-items-center mb-3">
                        <span class="badge me-3" style="background-color: @Model.Category.Color">
                            @Model.Category.Name
                        </span>
                        @foreach (var postTag in Model.PostTags)
                        {
                            <span class="badge bg-secondary me-1">#@postTag.Tag.Name</span>
                        }
                    </div>

                    <!-- Like Button -->
                    <button type="button" class="btn btn-outline-danger" id="likeBtn" data-post-id="@Model.Id">
                        <i class="bi bi-heart" id="likeIcon"></i>
                        <span id="likeText">Curtir</span>
                        (<span id="likeCount">@Model.LikeCount</span>)
                    </button>
                </header>

                <!-- Post Content -->
                <div class="post-content">
                    @Html.Raw(Model.Content)
                </div>
            </article>

            <!-- Comments Section -->
            <section class="comments-section">
                <h3 class="mb-4">
                    <i class="bi bi-chat-dots me-2"></i>
                    Comentários (@Model.Comments.Count())
                </h3>

                @if (User.Identity?.IsAuthenticated == true)
                {
                    <!-- Comment Form -->
                    <div class="card mb-4">
                        <div class="card-body">
                            <form asp-controller="Comments" asp-action="Create" method="post">
                                <input type="hidden" name="PostId" value="@Model.Id" />
                                <div class="mb-3">
                                    <label for="Content" class="form-label">Seu comentário</label>
                                    <textarea class="form-control" name="Content" rows="4" required 
                                              placeholder="Escreva seu comentário..."></textarea>
                                </div>
                                <button type="submit" class="btn btn-primary">
                                    <i class="bi bi-send me-1"></i>Enviar comentário
                                </button>
                            </form>
                        </div>
                    </div>
                }
                else
                {
                    <div class="alert alert-info">
                        <i class="bi bi-info-circle me-2"></i>
                        <a href="/Identity/Account/Login">Faça login</a> para comentar neste post.
                    </div>
                }

                <!-- Comments List -->
                @foreach (var comment in Model.Comments.Where(c => c.ParentCommentId == null).OrderByDescending(c => c.CreatedAt))
                {
                    <div class="card mb-3">
                        <div class="card-body">
                            <div class="d-flex justify-content-between align-items-start mb-2">
                                <strong>@comment.Author.FullName</strong>
                                <small class="text-muted">@comment.CreatedAt.ToString("dd/MM/yyyy HH:mm")</small>
                            </div>
                            <p class="mb-0">@comment.Content</p>
                        </div>
                    </div>
                }
            </section>

            <!-- Related Posts -->
            @if (relatedPosts?.Any() == true)
            {
                <section class="related-posts mt-5">
                    <h3 class="mb-4">
                        <i class="bi bi-collection me-2"></i>
                        Posts Relacionados
                    </h3>
                    <div class="row">
                        @foreach (var post in relatedPosts)
                        {
                            <div class="col-md-4 mb-3">
                                <div class="card h-100">
                                    @if (!string.IsNullOrEmpty(post.FeaturedImageUrl))
                                    {
                                        <img src="/@post.FeaturedImageUrl" class="card-img-top" 
                                             style="height: 150px; object-fit: cover;" alt="@post.Title">
                                    }
                                    <div class="card-body d-flex flex-column">
                                        <h6 class="card-title">@post.Title</h6>
                                        <p class="card-text text-muted small flex-grow-1">@post.Summary</p>
                                        <a href="@Url.Action("Post", "Home", new { slug = post.Slug })" 
                                           class="btn btn-sm btn-outline-primary mt-auto">Ler mais</a>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </section>
            }
        </div>

        <!-- Sidebar -->
        <div class="col-lg-4">
            <!-- Recent Posts -->
            @if (recentPosts?.Any() == true)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-clock me-2"></i>Posts Recentes</h5>
                    </div>
                    <div class="card-body">
                        @foreach (var post in recentPosts)
                        {
                            <div class="d-flex mb-3">
                                @if (!string.IsNullOrEmpty(post.FeaturedImageUrl))
                                {
                                    <img src="/@post.FeaturedImageUrl" class="me-3" 
                                         style="width: 60px; height: 60px; object-fit: cover;" alt="@post.Title">
                                }
                                <div class="flex-grow-1">
                                    <h6 class="mb-1">
                                        <a href="@Url.Action("Post", "Home", new { slug = post.Slug })" 
                                           class="text-decoration-none">@post.Title</a>
                                    </h6>
                                    <small class="text-muted">@post.PublishedAt?.ToString("dd/MM/yyyy")</small>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            }

            <!-- Categories -->
            @if (categories?.Any() == true)
            {
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0"><i class="bi bi-tags me-2"></i>Categorias</h5>
                    </div>
                    <div class="card-body">
                        @foreach (var category in categories)
                        {
                            <div class="d-flex justify-content-between align-items-center mb-2">
                                <a href="@Url.Action("Category", "Home", new { id = category.Id })" 
                                   class="text-decoration-none">
                                    <span class="badge me-2" style="background-color: @category.Color">
                                        @category.Name
                                    </span>
                                </a>
                                <span class="text-muted">(@category.Posts.Count(p => p.IsPublished))</span>
                            </div>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.getElementById('likeBtn').addEventListener('click', function() {
            const postId = this.dataset.postId;
            const likeIcon = document.getElementById('likeIcon');
            const likeText = document.getElementById('likeText');
            const likeCount = document.getElementById('likeCount');
            
            fetch('/Home/ToggleLike', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: `postId=${postId}`
            })
            .then(response => response.json())
            .then(data => {
                likeCount.textContent = data.likeCount;
                if (data.liked) {
                    likeIcon.className = 'bi bi-heart-fill';
                    likeText.textContent = 'Curtido';
                    this.classList.remove('btn-outline-danger');
                    this.classList.add('btn-danger');
                } else {
                    likeIcon.className = 'bi bi-heart';
                    likeText.textContent = 'Curtir';
                    this.classList.remove('btn-danger');
                    this.classList.add('btn-outline-danger');
                }
            })
            .catch(error => console.error('Error:', error));
        });
    </script>
}
